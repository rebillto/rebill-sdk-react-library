import{jsx as e}from"react/jsx-runtime";import{createContext as t,useState as s,useEffect as n,useContext as r}from"react";import*as i from"rebill";function o(e){if(!("firstName"in e&&"lastName"in e&&"email"in e&&"phone"in e&&"personalId"in e&&"address"in e))return!1;const t="countryCode"in e.phone&&"areaCode"in e.phone&&"phoneNumber"in e.phone,s="type"in e.personalId&&"value"in e.personalId,n="state"in e.address&&"city"in e.address&&"street"in e.address&&"number"in e.address&&"country"in e.address&&"zipCode"in e.address;return t&&s&&n}const a=t(void 0),d=({children:t,apiKey:r,rebillId:d})=>{const[l,c]=s({}),[u,m]=s({}),[p,y]=s(null);n((()=>{if(!r)return void console.error("Rebill API key is not provided");const e=new i.setSdk(r);y(e)}),[r]),n((()=>{p&&p.setElements(d)}),[p]),n((()=>{p&&o(l)&&p.setCustomer(l)}),[l]),n((()=>{p&&u&&p.setMetadata(u)}),[u]);const b={setCustomer:c,setTransaction:e=>{p&&p.setTransaction(e)},setStyles:e=>{p&&p.setStyles(e)},setText:e=>{p&&p.setText(e)},setCallbacks:(e,t)=>{p&&p.setCallbacks({onSuccess:e,onError:t})},setMetadata:m,getStatesBy:i.getStatesBy,getIdentificationBy:i.getIdentificationBy,customer:l,sdk:p};return e(a.Provider,{value:b,children:t})},l=()=>{const e=r(a);if(void 0===e)throw new Error("useRebill must be used within a RebillProvider");return e};export{d as RebillProvider,o as isValidCustomer,l as useRebill};
//# sourceMappingURL=index.js.map
